/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package library;

import javax.swing.event.TableModelListener;
import javax.swing.table.TableModel;

/**
 *
 * @author asus
 */
public class Report_Student extends javax.swing.JInternalFrame {
    //------------------------ATTRIBUTES
    private Main main;
    private Data data;
    
    public Report_Student(Main main, Data data) {
        initComponents();
        this.main = main;
        this.data = data;
        refresh();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tb_student = new javax.swing.JTable();
        bt_refresh = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("Report Student");
        setVisible(true);

        tb_student.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tb_student);

        bt_refresh.setText("Refresh");
        bt_refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_refreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(bt_refresh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 381, Short.MAX_VALUE))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bt_refresh)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void refresh(){
       
        tb_student.setModel(new TableModel() {
            @Override            
            public int getRowCount() {
                return data.getStudents().size();
            }
            @Override            
            public int getColumnCount() {
                return 2;
            }
            @Override
            public String getColumnName(int columnIndex) {
                switch (columnIndex) {
                    case 0:return "Id";
                    case 1:return "Name";
                    default:return "";
                }
            }

            @Override
            //Etiquetas
            public Class<?> getColumnClass(int columnIndex) {
                return String.class;
            }            

            @Override
            //Editable
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return false;
            }

            @Override
            //por cada una de las celdas que valor pone y lo muestra
            //r=fila,c =columna
            public Object getValueAt(int rowIndex, int columnIndex) {
                return data.getStudents().get(rowIndex)[columnIndex];
            }

            @Override
            
            public void setValueAt(Object aValue, int rowIndex, int columnIndex) {
            }

            @Override
            public void addTableModelListener(TableModelListener l) {
            }

            @Override
            public void removeTableModelListener(TableModelListener l) {
            }
        });
    }
    
    private void bt_refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_refreshActionPerformed
        // TODO add your handling code here:
        refresh();
    }//GEN-LAST:event_bt_refreshActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_refresh;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tb_student;
    // End of variables declaration//GEN-END:variables
}
