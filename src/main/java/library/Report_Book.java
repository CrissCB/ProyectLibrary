/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package library;

import javax.swing.event.TableModelListener;
import javax.swing.table.TableModel;

/**
 *
 * @author Crist
 */
public class Report_Book extends javax.swing.JInternalFrame {

    /**
     * Creates new form Report_Book
     */
    private Main main;
    private Data data;
    
    public Report_Book(Main main, Data data) {
        initComponents();
        this.main = main;
        this.data = data;
        refresh();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tb_book = new javax.swing.JTable();
        bt_refresh = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("Report Book");
        setVisible(true);

        tb_book.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Code", "Name", "Stock", "loan"
            }
        ));
        jScrollPane1.setViewportView(tb_book);

        bt_refresh.setText("Refresh");
        bt_refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_refreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bt_refresh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(7, 7, 7))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 381, Short.MAX_VALUE)
                    .addGap(7, 7, 7)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(296, Short.MAX_VALUE)
                .addComponent(bt_refresh)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(34, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void refresh(){
       
        tb_book.setModel(new TableModel() {
            @Override            
            public int getRowCount() {
                return data.getBooks().size();
            }
            @Override            
            public int getColumnCount() {
                return 4;
            }
            @Override
            public String getColumnName(int columnIndex) {
                switch (columnIndex) {
                    case 0:return "Code Book";
                    case 1:return "Name Book";
                    case 2:return "Stock";
                    case 3:return "Loan";
                    default:return "";
                }
            }
            @Override
            
            public Class<?> getColumnClass(int columnIndex) {
                return String.class;
            }            

            @Override
            
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return false;
            }

            @Override
           
            public Object getValueAt(int rowIndex, int columnIndex) {
                return data.getBooks().get(rowIndex)[columnIndex];
            }

            @Override
            
            public void setValueAt(Object aValue, int rowIndex, int columnIndex) {
            }

            @Override
            public void addTableModelListener(TableModelListener l) {
            }

            @Override
            public void removeTableModelListener(TableModelListener l) {
            }
        });
    }
    
    private void bt_refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_refreshActionPerformed
        // TODO add your handling code here:
        refresh();
    }//GEN-LAST:event_bt_refreshActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_refresh;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tb_book;
    // End of variables declaration//GEN-END:variables
}
